Things to do:
- Utilities can have some stuff moved out to a static config class
- Figure out whether to do regular components or real ECS : http://www.gamedev.net/page/resources/_/technical/game-programming/understanding-component-entity-systems-r3013
- Fix the stupid media player when you want to play a sfx several times very quickly.
- Implement TaskQueue - this can do things like play spell animations, move npcs, cutscenes, etc.


- Figure out NPC to DialogState relationship.
---- What this one will be is kind of like this (with components, could do with OO) : 
---- An NPC entity will have a component that says they can be talked to (talkable, or something)
---- This component will keep the ID of their line of dialog.
---- When you press the interact key in from of someone and they have the component, 
----     then you move to the dialog state with that ID as an argument (still haven't put in state arguments)
---- Then rather than using testMessage in dialog state, the only thing that needs to change
---- is to look up the line of dialog using the ID.


- Figure out how to keep track of which direction the player is facing.
- Move the camera to the world since nothing else should need to know about it.
- Eventually move the tile definitions to an external file (gson) so that we can change things without having to recompile.
- Put entity info into gson and then load them that way.
- World json (soon gson) file should probably be two dimensional (instead of one long string) - let's see what gson will let us do.
- Make the dialog box all purty.
- Save/Load the entire game as a file (current world, X/Y, etc.)
- Make a different Overworld map and inner map with a way to switch between the two.
- Add spells as an option in the BattleState (and possibly in the overworld).